name: "build-test"
on: # rebuild any PRs and main branch changes
  check_run:
  check_suite:
  create:
  delete:
  deployment:
  deployment_status:
  fork:
  gollum:
  issue_comment:
  issues:
  label:
  milestone:
  page_build:
  project:
  project_card:
  project_column:
  public:
  pull_request:
  pull_request_review:
  pull_request_review_comment:
  push:
    branches:
      - master
      - 'releases/*'
  registry_package:
  release:
  status:
  watch:

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      uses: actions/checkout@v2
    - id: build
      run: |
        npm install
        npm run format-check
        npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      uses: actions/checkout@v2
    - uses: ./
      with:
        status: starting
        channel: '#actions'
    - id: dump_github
      name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - id: dump_job
      name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - uses: ./
      with:
        status: in progress
        channel: '#actions'
    - id: dump_steps
      name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - uses: ./
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#actions'
        downloadUrl: "https://github.com/openhousepvt"
      if: always()
  build:
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      uses: actions/checkout@v2
    - id: build
      run: |
        npm install
        npm run all
    - uses: ./
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#actions'
      if: always()
